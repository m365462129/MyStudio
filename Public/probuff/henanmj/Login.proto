syntax = "proto2";

//本文件定义客户端与登录服务器的交互命令

//以下为客户端发给服务器的命令和回应

//命令ID：1，请求登录
message CMD_Login
{
	optional uint64 UserID = 1; //用户ID。为0表示微信登录
	optional string Password = 2;  //密码
	optional string WeiXinCode = 3; //微信授权码。如果是用ID和密码登录，则忽略该参数
	optional string Platform = 4; //系统平台
	optional uint32 ProtoVersion = 5;//协议版本。固定为1
	optional string ClientVersion = 6;//客户端版本
	optional string AppName = 7;//客户端名称，每个游戏不一样
	optional bool   EnterGraySrv = 8;       //是否进入灰度服,默认进入正式服,未部署灰度服时将忽略该参数。
	optional string ExJsonStr = 9;	//扩展json字段，透传给运营后台
}
message RSP_Login
{
	optional uint64 UserID = 1; //用户ID，0表示服务器拒绝。如果拒绝，则忽略以下三项参数。
	optional string Password = 2; //密码
	optional uint32 RoomID = 3; //如果正在游戏中，则表示房号。为0表示不在游戏中。
	optional string GameName = 4; //如果正在游戏中，则表示游戏名。不在游戏中则忽略该值。
	optional string ErrorInfo = 5; //如果拒绝，则表示详细描述。
	optional int32 ErrorCode = 6; //错误码
	optional string LoginEnv = 7; //"room":可直连游戏服, "match":处于比赛场(RoomID为0是匹配界面)， "new_gold":处于金币场(RoomID为0是匹配界面)
	optional string LoginArgs = 8; //对应格式为相应的JSON字符串，LoginEnv为"room"时对应的格式为{GameName=..., RoomID=...}
	//"match"对应的数据格式为{MatchID=..., StageID=...}
	//"new_gold"对应的数据格式为{GoldID=...}
}

//命令ID：2，请求创建并进入房间
message CMD_CreateRoom
{
	optional string GameName = 1;  //游戏名
	optional uint32 RoundCount = 2; //局数
	optional string Rule = 3; //游戏规则，具体格式由游戏服务器和客户端议定
	optional uint32 HallID = 4; // 麻将馆馆号，麻将馆普通开房时使用
	optional string ExJsonStr = 5; // 扩展数据，透传给游戏服
	optional bool IsGoldFieldRoom = 6;// 是否为金币场房间
}
message RSP_CreateRoom
{
	optional uint32 RoomID = 1; //房间号。为0表示创建失败。如果失败，则忽略以下除ErrorInfo之外的全部参数。
	optional string ServerHost = 2; //游戏服域名
	optional int32 ServerPort = 3; //游戏服端口
	optional uint32 SeatID = 4; //座位号
	optional string Password = 5; //临时密码
	optional string ErrorInfo = 6; //如果创建失败，则表示失败的描述信息。
	optional uint64 Token = 7; // token值，用于获取WebSocket端口
	optional uint32 HallID = 8; // 麻将馆馆号，麻将馆普通开房时返回馆号，其它情况返回0
	optional int32 RoomType = 9; // 房间类型，0为非麻将馆房间，1为麻将馆普通开房房间，2为麻将馆随机组局房间，3为比赛场房间
	optional int32 wsport = 10;	//ws端口，测试模式才有这个值
	optional int32 ErrorCode = 11;	//错误码
}

//命令ID：3，请求进入房间
message CMD_EnterRoom
{
	optional uint32 RoomID = 1;  //房间号或麻将馆馆号
	optional string GameName = 2; // 游戏名(用于棋牌馆快速组局或比赛场或金币场时根据地区分配对应的游戏服)
	optional uint32 MatchID = 3; // 比赛场ID
	optional int32 MatchAwardRank = 4; // 比赛场最大奖励名次
	optional uint32 GoldFieldID = 5; // 金币场ID
	optional string ExJsonStr = 6; // 扩展数据，透传给游戏服
	optional uint32 PrevRoomNum = 7; // 上一桌的房号，用于金币场换桌，不会进入该房号的房间
}
message RSP_EnterRoom
{
	//  0: 成功，非零值表示失败，ErrorInfo为失败描述信息
	// -1: 表示房间不存在或已解散
	// -2: 表示房间已满
	// -3: 非法操作，会直接关闭连接，不会发送响应
	// -4: 不允许直接通过房号进入麻将馆的房间，只能通过馆号进入
	// -5: 该玩家的客户端不支持此房间的玩法规则
	// -6: 获取麻将馆数据失败
	// -7: 该麻将馆不存在
	// -8: 玩家不在该麻将馆中
	// -9: 玩家被禁止进入该麻将馆
	// -10: 因其它原因进入麻将馆失败，具体信息在ErrInfo中
	// -11：房卡不足
	// -12：数据非法
	// -13：获取房卡异常
	// -14: 客户端和游戏服不匹配
	// -15: 游戏已进行5局，禁止加入
	// -16: 请求超时
	// -17: 游戏开始后不允许加入
	// -18: 因体力不足进入比赛场失败
	// -19: 因其它原因进入比赛场失败，具体原因见ErrorInfo
	// -20: 游戏已进行3局，禁止加入
	// -21: 游戏已进行5局，禁止加入
	// -22: 游戏已进行6局，禁止加入
	// -100: 连接中继服失败，会直接关闭连接，不会发送响应
	optional int32 ErrorCode = 1;
	optional string ServerHost = 2; //游戏服域名
	optional int32 ServerPort = 3; //游戏服端口
	optional uint32 SeatID = 4; //座位号
	optional string Password = 5; //临时密码
	optional uint32 RoundCount = 6;//房间的总局数
	optional string Rule = 7; //房间的游戏规则，与CMD_CreateRoom中的Rule参数一致。
	optional uint32 RoomID = 8; // 房间号，用于麻将馆模式
	optional uint32 HallID = 9; // 麻将馆馆号，若进入的不是麻将馆则为0
	optional string ErrorInfo = 10; // 如果进入失败，则表示失败的描述信息，否则为空
	optional uint64 Token = 11; // Token值，用于获取WebSocket端口
	optional int32 RoomType = 12; // 房间类型，0为非麻将馆房间，1位麻将馆普通开房房间，2为麻将馆随机组局房间，3为比赛场房间 4为金币场房间
	optional int32 wsport = 13;	//ws端口，测试模式才有这个值
	optional uint32 MatchID = 14;	// 比赛场ID
	optional int32 MatchAwardRank = 15; // 比赛场最大奖励名次
	optional uint32 GoldFieldID = 16; // 金币场ID
}

//命令ID：4，请求进入大厅房间
message CMD_EnterHall
{
	optional string GameName = 1;  //游戏名
	optional string Rule = 2; //游戏规则，与CMD_CreateRoom中的Rule参数一致。
}
message RSP_EnterHall
{
	optional uint32 RoomID = 1; //房间号。为0表示游戏名不存在或规则错误。
	optional string ServerHost = 2; //游戏服域名
	optional int32 ServerPort = 3; //游戏服端口
	optional uint32 SeatID = 4; //座位号
	optional string Password = 5; //临时密码
	optional string ErrorInfo = 6; //如果进入失败，则表示失败的描述信息。
}


//命令5
message CMD_Ping {
	optional uint64 TimeStamp = 1;
	optional uint64 UserID = 2;
}

message RSP_Ping {
	optional uint64 TimeStamp = 1;
	optional uint64 UserID = 2;
}

//命令6
message CMD_GoldEnter {
	optional uint32 GoldID = 1;
	optional uint64 UserID = 2;
}

message RSP_GoldEnter {
	optional uint32 GoldID = 1;
	optional uint64 UserID = 2;
	optional int32 ErrorCode = 3;
	optional string ErrorInfo = 4; //如果进入失败，则表示失败的描述信息。
	optional string GameName = 5;  //游戏名
}

//命令7
message CMD_GoldQuit {
	optional uint32 GoldID = 1;
	optional uint64 UserID = 2;
}


message RSP_GoldQuit {
	optional uint32 GoldID = 1;
	optional uint64 UserID = 2;
	optional int32 ErrorCode = 3;
	optional string ErrorInfo = 4;

}

//命令8 金币场匹配房间信息通知
message Notify_GoldRoomInfo {
	optional uint32 RoomID = 1; //房号

	message PlayerInfo {
		optional uint64 UserID = 1;
		optional uint32 SeatID = 2;
	}

	repeated PlayerInfo Players = 2;
	optional uint32 UserID = 3; //当前玩家
	optional string Password = 4; //当前玩家登录游戏服的口令
	optional string PlayRule = 5;
	//以下可能用于测试服
	optional string Host = 6;
	optional uint32 Port = 7;
}

//命令9 比赛场报名
message CMD_MatchSignUp {
	optional uint64 MatchID = 1; //比赛场ID
	optional uint64 StageID = 2; //第几期
	optional uint64 UserID = 3; //用户ID
}

message RSP_MatchSignUp {
	optional uint64 MatchID = 1; //比赛场ID
	optional uint64 StageID = 2; //第几期
	optional uint64 UserID = 3; //用户ID
	optional uint32 ErrorCode = 4; //错误码 0表示成功
	optional string ErrorInfo = 5; //错误描述
	optional uint64 SignupUserCnt = 6; //当前报名人数
}

//命令10 退赛
//退赛
message CMD_MatchWithdraw {
	optional uint64 MatchID = 1; //比赛场ID
	optional uint64 StageID = 2; //第几期
	optional uint64 UserID = 3; //用户ID
}

//退赛应答
message RSP_MatchWithdraw {
	optional uint64 MatchID = 1; //比赛场ID
	optional uint64 StageID = 2; //第几期
	optional uint64 UserID = 3; //用户ID
	optional uint32 ErrorCode = 4; //错误码 0表示成功
	optional string ErrorInfo = 5; //错误描述
}

//命令11 比赛事件广播
message Notify_MatchEvent {
	optional uint64 MatchID = 1; //比赛场ID
	optional uint64 StageID = 2; //第几期
	optional uint32 CurLoopNo = 3; //当前第几轮 0表示比赛尚未开始
	optional uint32 EventTime = 4; //事件发生时间
	message PlayerInfo {
		optional uint64 UserID = 1;
		optional int32 Score = 2;
		optional int32 Rank = 3;
	}
	repeated PlayerInfo Users = 5;
	optional string EventArgs = 6; //
	// {MatchState="0(报名中)|1（正在比赛）|-1（流赛）|2（比赛结束）", SignupUserCnt=xxx, UserCnt=xxx， RoomCnt=xxx}
	// Type = "match_info",MatchState =  0,SignupUserCnt = xxx 报名人数事件
	// Type = "match_end",MatchState =  -1,SignupUserCnt=xxx, UserCnt=xxx， RoomCnt=xxx比赛结束事件
	// Type = "loop_start",MatchState =  1,TotalRoomCnt=xxx, PromotionUsers=[xxx,xxx,..]， Competitions=[xxx,xxx,...] 比赛轮开始
	// Type = "loop_end",MatchState =  1|2, PromotionUsers=[xxx,xxx,..]， EliminatedUsers=[xxx,xxx,...] 比赛轮结束
	// Type = "loop_playing",MatchState =  1, PromotionUsers=[xxx,xxx,..]，Competitions=[xxx,xxx,..]， EliminatedUsers=[xxx,xxx,...] 比赛轮正在继续

}

//命令12
message Notify_MatchRoomInfo {
	message PlayerInfo {
		optional uint64 UserID = 1;
		optional uint32 SeatID = 2;
	}
	optional uint32 RoomID = 1; //房号
	repeated PlayerInfo Players = 2;
	optional uint32 UserID = 3; //当前玩家
	optional string Password = 4; //当前玩家登录游戏服的口令
	optional string PlayRule = 5;
	//以下可能用于测试服
	optional string Host = 6;
	optional uint32 Port = 7;
}

//命令13
message CMD_MatchEnter {
	optional uint64 MatchID = 1; //比赛场ID
	optional uint64 StageID = 2; //第几期
	optional uint64 UserID = 3;
}

message RSP_MatchEnter {
	optional uint64 MatchID = 1; //比赛场ID
	optional uint64 StageID = 2; //第几期
	optional uint64 UserID = 3;
	optional uint32 ErrorCode = 4; //错误码 0表示成功
	optional string ErrorInfo = 5; //错误描述
	optional bool IsStart = 6; //是否已经开始
	optional int32 CurLoopCnt = 7; //0表示尚未开始
	optional int32 UserCnt = 8; //当前轮剩余玩家数
	optional int32 SignupUserCnt = 9; //总报名人数
	optional int32 RoomCnt = 10; //总报名人数
	optional int32 QuitScore = 11; //淘汰分
	optional int32 Rank = 12; //名次 临时排名
	optional int32 Score = 13; //积分
	optional int32  State = 14;//狀態 0表示報名階段 -1 表示已經淘汰 1 表示等待創建本輪房間 3 表示正在游戲 4 表示已經完成本輪牌局
	optional string GameName = 15;
}

//命令14 帐号被挤出通知（不会断开连接）
message Notify_Extrusion {
	optional uint64 UserID = 1;
}


