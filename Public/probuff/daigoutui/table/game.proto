syntax = "proto2";
package Game;
//重新发牌
message RedealCardReq{
};

//明牌申请 回复
message RedealCardReply{
	optional bool   is_ok=1;//
	optional string desc=2;//错误描述信息 
}

//明牌通知
message RedealCardNotify{
	optional int32 reason=1; //1 地主无炸弹 2 地主无法叫狗腿
}

//明牌申请
message ShowCardReq{
	optional bool  show_or_not=1;//是否明牌
}

//明牌申请 回复
message ShowCardReply{
	optional bool   is_ok=1;//
	optional string desc=2;//错误描述信息 
}

//明牌通知
message ShowCardNotify{
	optional int32  player_id=1;//明牌玩家的ID
	repeated int32  cards=2;//明牌人的手牌
	optional bool   show_or_not=3;//是否明牌
	optional int32  servant_player_id=4;//狗腿玩家ID，只有狗腿牌打出之后该字段有值 
	optional bool   is_1v4=5;//明一打四直接有值，暗一打四时只有地主打出狗腿牌才有值
}


//叫狗腿申请
message CallServantReq{
}

//叫狗腿申请 回复
message CallServantReply{
	optional bool   is_ok=1;//是否成功 
	optional string desc=2;//错误描述信息 
}

//叫狗腿申请 通知
message CallServantNotify{
	optional int32 servant_card=1;//狗腿牌
}

message Player{
	optional int32 	player_id=1;//玩家ID
	optional int32  player_pos=2;//玩家位置 1\3为对家  2\4为对家
	optional bool 	warning_flag=3;//是否报警 手牌<= 7张时报警
	optional bool  	is_offline=4;      //是否掉线
	optional bool  	is_owner=5;//是否为房间所有者
	optional bool  	is_ready=6;
	optional int32  score=7;//积分
	optional int32  win_cnt=8;         //胜利次数
	optional int32  lost_cnt=9;      //胜利次数
	optional int32  rest_card_cnt=11;	//剩余牌数量 报警前只有友方可以看到 报警后全部可以看到
	optional int32	round_discard_cnt=14;//本轮出牌情况 -1 还未轮到 0 已过牌 其他表示出牌数量
	repeated int32  round_discard_info=15;//当前出牌
	optional int32  round_discard_type=19;//出牌类型
	optional int32  round_discard_value=20;//出牌值 
	optional int32  multiple=16;//喜牌倍数 
	repeated int32  cards=17;//个人手牌
	optional bool   show_card=18;//是否明牌
}

//单播 游戏信息 登录或者断线重连时发送
message GameInfo{
	optional int32 room_id=1;//房间号
	repeated Player players=2; 
	optional int32 game_loop_cnt=3;//当前游戏局数
	optional int32 game_total_cnt=4;//游戏总局数
	optional int32 desk_player_id=5;//上一个已经出牌的玩家
	repeated int32 desk_cards=6;//上一个已经出牌的玩家所出的牌
	optional int32 next_player_id=7;//下一个需要出牌的玩家 为0时表示没人需要出牌
	optional bool  can_apply_showcard=13;//下一个出牌玩家是否可以申请明牌
	optional int32 time=8;//服务器时间cuo
	repeated int32 cards=9;//个人手牌
	optional int32 state=11;// 0 表示牌局未开始，其他表示牌局已经开始
	optional int32 servant_card=14;//狗腿牌
	optional int32 servant_player_id=15;//狗腿玩家ID，只有狗腿牌打出之后该字段有值 
	optional int32 lord_player_id=16;//地主玩家
	optional bool  can_call_servant=17;//是否可以召唤狗腿，只有地主可以收到该字段 
	optional bool  is_1v4=18;//明一打四直接有值，暗一打四时只有地主打出狗腿牌才有值
	optional int32 block_operation=19;//阻塞操作 1 地主无炸弹 2 地主无法叫狗腿
	optional int32 discard_serno=20;
}

//广播 结算信息 一把打玩发送
message CurrentGameAccount
{
  message Player{
    optional int32   player_id=1;//玩家ID
    optional int32   remain_card_cnt=2;//剩余牌数
    optional int32   score=3;//总积分
    optional int32	 win_cnt=4;         //胜利次数
    optional int32   lost_cnt=5;      //胜利次数
    optional int32   current_score=6;//本局积分
    optional int32   multiple = 7;//喜牌倍数
    optional int32   bond_score = 8;//喜牌分数
	optional string  played_cards = 9;
	repeated int32   cards = 10;
	optional int32   bond_pattern_cnt = 11;//喜牌个数
	optional int32   lord_cnt = 12;
	optional int32   servant_cnt = 13;
	optional int32   farmer_cnt = 14;
	optional int32   identity=15;//1 地主 2狗腿 3 农民
  }
  repeated Player players = 1;
  optional int32  game_count=2;//总游戏局数
  optional bool   is_summary_account=3;//是否大结 最后一局结束时该标志为true
  optional string	startTime = 4; //牌局开始时间(秒)
  optional string	endTime = 5; //牌局结束时间(秒)
  optional int32 first_player_id=6;//先手的玩家ID
  optional int32 show_card_multiple = 7;//明牌倍数
  optional bool need_show_round_settle = 8;//本局是否进行了小结
  optional int32 base_score = 9;//基础分
  optional int32 free_sponsor = 20; //解散者id
}

//广播 下行的出牌通知,收到玩家出牌信息后，如果出牌合法，则广播该通知
message DiscardNotify
{
	optional int32  player_id=1;//出牌的玩家ID
	optional bool   is_passed=2;//是否过牌
	repeated int32  cards=3;//当前出牌情况
	optional bool   warning_flag=4;//该字段暂时无用，警告标志
	optional int32  next_player_id=5;//下一个需要出牌的玩家
	optional int32  rest_card_cnt=6;//当前玩家剩余牌数
	optional bool   is_first_pattern=7;//下一个玩家是否首发
	repeated int32  hand_cards=8;//出牌玩家明牌状态下该字段才有值
	optional int32  multiple=9;//出牌玩家的喜牌倍数 
	optional bool   can_apply_showcard=10;//下一个出牌玩家是否可以申请明牌
	optional int32  servant_player_id=11;//狗腿玩家ID，只有狗腿牌打出之时该字段有值，其他时候不会有值 
	optional int32  type=12;//牌型
	optional bool   is_1v4=13;//明一打四直接有值，暗一打四时只有地主打出狗腿牌才有值 
	optional int32  value=14;//牌值
	optional int32  discard_serno=15;
}

//单播 收到玩家出牌信息后，下行的出牌回复 
message DiscardReply{
	optional bool   is_ok=1;//是否出牌成功 
	optional string desc=2;//错误描述信息 牌型错误、未轮到玩家出牌、不能过牌
	repeated int32  cards=3;//当前手牌
	optional int32  discard_serno=4;
}

//玩家上行的出牌信息
message DiscardInfo{
	optional bool   is_passed=1;//是否要不起，即过牌
	repeated int32  cards=2;//当前出牌牌，如果过牌则此处为空数组
	optional int32  discard_serno=3;
}