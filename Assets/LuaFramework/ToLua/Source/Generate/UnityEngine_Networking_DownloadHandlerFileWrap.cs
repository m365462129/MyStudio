//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_Networking_DownloadHandlerFileWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.Networking.DownloadHandlerFile), typeof(UnityEngine.Networking.DownloadHandler));
		L.RegFunction("New", _CreateUnityEngine_Networking_DownloadHandlerFile);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("removeFileOnAbort", get_removeFileOnAbort, set_removeFileOnAbort);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_Networking_DownloadHandlerFile(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.Networking.DownloadHandlerFile obj = new UnityEngine.Networking.DownloadHandlerFile(arg0);
				ToLua.PushSealed(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.Networking.DownloadHandlerFile.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_removeFileOnAbort(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.DownloadHandlerFile obj = (UnityEngine.Networking.DownloadHandlerFile)o;
			bool ret = obj.removeFileOnAbort;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index removeFileOnAbort on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_removeFileOnAbort(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.DownloadHandlerFile obj = (UnityEngine.Networking.DownloadHandlerFile)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.removeFileOnAbort = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index removeFileOnAbort on a nil value");
		}
	}
}

