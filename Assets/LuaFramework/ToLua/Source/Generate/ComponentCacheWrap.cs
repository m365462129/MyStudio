//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ComponentCacheWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ComponentCache), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("SetCacheToLua", SetCacheToLua);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("group", get_group, set_group);
		L.RegVar("gameObjectList", get_gameObjectList, set_gameObjectList);
		L.RegVar("transformList", get_transformList, set_transformList);
		L.RegVar("rectTransformList", get_rectTransformList, set_rectTransformList);
		L.RegVar("imageList", get_imageList, set_imageList);
		L.RegVar("inputFieldList", get_inputFieldList, set_inputFieldList);
		L.RegVar("textList", get_textList, set_textList);
		L.RegVar("toggleList", get_toggleList, set_toggleList);
		L.RegVar("toggleEventList", get_toggleEventList, set_toggleEventList);
		L.RegVar("buttonList", get_buttonList, set_buttonList);
		L.RegVar("sliderList", get_sliderList, set_sliderList);
		L.RegVar("toggleGroupList", get_toggleGroupList, set_toggleGroupList);
		L.RegVar("graphicList", get_graphicList, set_graphicList);
		L.RegVar("scrollRectList", get_scrollRectList, set_scrollRectList);
		L.RegVar("scrollbarList", get_scrollbarList, set_scrollbarList);
		L.RegVar("dropdownList", get_dropdownList, set_dropdownList);
		L.RegVar("gridLayoutGroupList", get_gridLayoutGroupList, set_gridLayoutGroupList);
		L.RegVar("rawImageList", get_rawImageList, set_rawImageList);
		L.RegVar("audioSourceList", get_audioSourceList, set_audioSourceList);
		L.RegVar("quickGridList", get_quickGridList, set_quickGridList);
		L.RegVar("tweenButtonScaleList", get_tweenButtonScaleList, set_tweenButtonScaleList);
		L.RegVar("simpleScrollViewList", get_simpleScrollViewList, set_simpleScrollViewList);
		L.RegVar("animationList", get_animationList, set_animationList);
		L.RegVar("animatorList", get_animatorList, set_animatorList);
		L.RegVar("spriteAtlasList", get_spriteAtlasList, set_spriteAtlasList);
		L.RegVar("spriteHolderList", get_spriteHolderList, set_spriteHolderList);
		L.RegVar("uiStateSwitcherList", get_uiStateSwitcherList, set_uiStateSwitcherList);
		L.RegVar("textWrapList", get_textWrapList, set_textWrapList);
		L.RegVar("uiImageAnimList", get_uiImageAnimList, set_uiImageAnimList);
		L.RegVar("canvasList", get_canvasList, set_canvasList);
		L.RegVar("particleSystemList", get_particleSystemList, set_particleSystemList);
		L.RegVar("particleSystemRendererList", get_particleSystemRendererList, set_particleSystemRendererList);
		L.RegVar("cacheList", get_cacheList, set_cacheList);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCacheToLua(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ComponentCache obj = (ComponentCache)ToLua.CheckObject<ComponentCache>(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			obj.SetCacheToLua(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_group(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			string ret = obj.group;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index group on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gameObjectList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.GameObject_Injection> ret = obj.gameObjectList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gameObjectList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_transformList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Transform_Injection> ret = obj.transformList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index transformList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rectTransformList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.RectTransform_Injection> ret = obj.rectTransformList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rectTransformList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_imageList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Image_Injection> ret = obj.imageList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index imageList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_inputFieldList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.InputField_Injection> ret = obj.inputFieldList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index inputFieldList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_textList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Text_Injection> ret = obj.textList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_toggleList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Toggle_Injection> ret = obj.toggleList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index toggleList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_toggleEventList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.ToggleEvent_Injection> ret = obj.toggleEventList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index toggleEventList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_buttonList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Button_Injection> ret = obj.buttonList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index buttonList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sliderList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Slider_Injection> ret = obj.sliderList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sliderList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_toggleGroupList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.ToggleGroup_Injection> ret = obj.toggleGroupList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index toggleGroupList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_graphicList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Graphic_Injection> ret = obj.graphicList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index graphicList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_scrollRectList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.ScrollRect_Injection> ret = obj.scrollRectList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scrollRectList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_scrollbarList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Scrollbar_Injection> ret = obj.scrollbarList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scrollbarList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dropdownList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Dropdown_Injection> ret = obj.dropdownList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dropdownList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gridLayoutGroupList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.GridLayoutGroup_Injection> ret = obj.gridLayoutGroupList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gridLayoutGroupList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rawImageList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.RawImage_Injection> ret = obj.rawImageList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rawImageList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_audioSourceList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.AudioSource_Injection> ret = obj.audioSourceList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index audioSourceList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_quickGridList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.QuickGrid_Injection> ret = obj.quickGridList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index quickGridList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tweenButtonScaleList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.TweenButton_Injection> ret = obj.tweenButtonScaleList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenButtonScaleList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_simpleScrollViewList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.SimpleScrollView_Injection> ret = obj.simpleScrollViewList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index simpleScrollViewList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_animationList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Animation_Injection> ret = obj.animationList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index animationList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_animatorList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Animator_Injection> ret = obj.animatorList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index animatorList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_spriteAtlasList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.SpriteAtlas_Injection> ret = obj.spriteAtlasList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index spriteAtlasList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_spriteHolderList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.SpriteHolder_Injection> ret = obj.spriteHolderList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index spriteHolderList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uiStateSwitcherList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.UIStateSwitcher_Injection> ret = obj.uiStateSwitcherList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uiStateSwitcherList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_textWrapList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.TextWrap_Injection> ret = obj.textWrapList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textWrapList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uiImageAnimList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.UIImageAnimation_Injection> ret = obj.uiImageAnimList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uiImageAnimList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_canvasList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Canvas_Injection> ret = obj.canvasList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index canvasList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_particleSystemList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.ParticleSystem_Injection> ret = obj.particleSystemList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index particleSystemList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_particleSystemRendererList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.ParticleSystemRenderer_Injection> ret = obj.particleSystemRendererList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index particleSystemRendererList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cacheList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.ComponentCache_Injection> ret = obj.cacheList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cacheList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_group(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.group = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index group on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gameObjectList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.GameObject_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.GameObject_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.GameObject_Injection>));
			obj.gameObjectList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gameObjectList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_transformList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Transform_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.Transform_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.Transform_Injection>));
			obj.transformList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index transformList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rectTransformList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.RectTransform_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.RectTransform_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.RectTransform_Injection>));
			obj.rectTransformList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rectTransformList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_imageList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Image_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.Image_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.Image_Injection>));
			obj.imageList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index imageList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_inputFieldList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.InputField_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.InputField_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.InputField_Injection>));
			obj.inputFieldList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index inputFieldList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_textList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Text_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.Text_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.Text_Injection>));
			obj.textList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_toggleList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Toggle_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.Toggle_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.Toggle_Injection>));
			obj.toggleList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index toggleList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_toggleEventList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.ToggleEvent_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.ToggleEvent_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.ToggleEvent_Injection>));
			obj.toggleEventList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index toggleEventList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_buttonList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Button_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.Button_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.Button_Injection>));
			obj.buttonList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index buttonList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sliderList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Slider_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.Slider_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.Slider_Injection>));
			obj.sliderList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sliderList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_toggleGroupList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.ToggleGroup_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.ToggleGroup_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.ToggleGroup_Injection>));
			obj.toggleGroupList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index toggleGroupList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_graphicList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Graphic_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.Graphic_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.Graphic_Injection>));
			obj.graphicList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index graphicList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_scrollRectList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.ScrollRect_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.ScrollRect_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.ScrollRect_Injection>));
			obj.scrollRectList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scrollRectList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_scrollbarList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Scrollbar_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.Scrollbar_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.Scrollbar_Injection>));
			obj.scrollbarList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scrollbarList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dropdownList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Dropdown_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.Dropdown_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.Dropdown_Injection>));
			obj.dropdownList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dropdownList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gridLayoutGroupList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.GridLayoutGroup_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.GridLayoutGroup_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.GridLayoutGroup_Injection>));
			obj.gridLayoutGroupList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gridLayoutGroupList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rawImageList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.RawImage_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.RawImage_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.RawImage_Injection>));
			obj.rawImageList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rawImageList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_audioSourceList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.AudioSource_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.AudioSource_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.AudioSource_Injection>));
			obj.audioSourceList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index audioSourceList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_quickGridList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.QuickGrid_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.QuickGrid_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.QuickGrid_Injection>));
			obj.quickGridList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index quickGridList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tweenButtonScaleList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.TweenButton_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.TweenButton_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.TweenButton_Injection>));
			obj.tweenButtonScaleList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenButtonScaleList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_simpleScrollViewList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.SimpleScrollView_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.SimpleScrollView_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.SimpleScrollView_Injection>));
			obj.simpleScrollViewList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index simpleScrollViewList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_animationList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Animation_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.Animation_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.Animation_Injection>));
			obj.animationList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index animationList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_animatorList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Animator_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.Animator_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.Animator_Injection>));
			obj.animatorList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index animatorList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_spriteAtlasList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.SpriteAtlas_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.SpriteAtlas_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.SpriteAtlas_Injection>));
			obj.spriteAtlasList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index spriteAtlasList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_spriteHolderList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.SpriteHolder_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.SpriteHolder_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.SpriteHolder_Injection>));
			obj.spriteHolderList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index spriteHolderList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uiStateSwitcherList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.UIStateSwitcher_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.UIStateSwitcher_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.UIStateSwitcher_Injection>));
			obj.uiStateSwitcherList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uiStateSwitcherList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_textWrapList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.TextWrap_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.TextWrap_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.TextWrap_Injection>));
			obj.textWrapList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textWrapList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uiImageAnimList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.UIImageAnimation_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.UIImageAnimation_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.UIImageAnimation_Injection>));
			obj.uiImageAnimList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uiImageAnimList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_canvasList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.Canvas_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.Canvas_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.Canvas_Injection>));
			obj.canvasList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index canvasList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_particleSystemList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.ParticleSystem_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.ParticleSystem_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.ParticleSystem_Injection>));
			obj.particleSystemList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index particleSystemList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_particleSystemRendererList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.ParticleSystemRenderer_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.ParticleSystemRenderer_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.ParticleSystemRenderer_Injection>));
			obj.particleSystemRendererList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index particleSystemRendererList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cacheList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ComponentCache obj = (ComponentCache)o;
			System.Collections.Generic.List<ComponentCache.ComponentCache_Injection> arg0 = (System.Collections.Generic.List<ComponentCache.ComponentCache_Injection>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ComponentCache.ComponentCache_Injection>));
			obj.cacheList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cacheList on a nil value");
		}
	}
}

