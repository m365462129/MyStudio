//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DNet_VideoFrameDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DNet.VideoFrameData), typeof(System.Object));
		L.RegFunction("New", _CreateDNet_VideoFrameData);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("buffer", get_buffer, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDNet_VideoFrameData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				byte[] arg0 = ToLua.CheckByteBuffer(L, 1);
				DNet.VideoFrameData obj = new DNet.VideoFrameData(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DNet.VideoFrameData.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_buffer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DNet.VideoFrameData obj = (DNet.VideoFrameData)o;
			byte[] ret = obj.buffer;
			LuaDLL.tolua_pushlstring(L, ret, ret.Length);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index buffer on a nil value");
		}
	}
}

