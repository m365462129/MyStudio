//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class WWWUtilWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("WWWUtil");
		L.RegFunction("Get", Get);
		L.RegFunction("GetSafe", GetSafe);
		L.RegFunction("Post", Post);
		L.RegFunction("Post_Data", Post_Data);
		L.RegFunction("GetConcurrence", GetConcurrence);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Get(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			WWWOperation o = WWWUtil.Get(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSafe(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
			WWWOperation o = WWWUtil.GetSafe(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Post(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.WWWForm arg1 = (UnityEngine.WWWForm)ToLua.CheckObject<UnityEngine.WWWForm>(L, 2);
				WWWOperation o = WWWUtil.Post(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.WWWForm arg1 = (UnityEngine.WWWForm)ToLua.CheckObject<UnityEngine.WWWForm>(L, 2);
				UnityEngine.Events.UnityAction<float> arg2 = (UnityEngine.Events.UnityAction<float>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<float>>(L, 3);
				WWWOperation o = WWWUtil.Post(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: WWWUtil.Post");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Post_Data(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			string arg0 = ToLua.CheckString(L, 1);
			byte[] arg1 = ToLua.CheckByteBuffer(L, 2);
			System.Collections.Generic.Dictionary<string,string> arg2 = (System.Collections.Generic.Dictionary<string,string>)ToLua.CheckObject(L, 3, typeof(System.Collections.Generic.Dictionary<string,string>));
			WWWOperation o = WWWUtil.Post_Data(arg0, arg1, arg2);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetConcurrence(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			string[] arg0 = ToLua.CheckStringArray(L, 1);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
			System.Action<WWWOperation> arg2 = (System.Action<WWWOperation>)ToLua.CheckDelegate<System.Action<WWWOperation>>(L, 3);
			System.Action<WWWOperation> arg3 = (System.Action<WWWOperation>)ToLua.CheckDelegate<System.Action<WWWOperation>>(L, 4);
			WWWUtil.GetConcurrence(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

