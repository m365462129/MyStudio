//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AudioPlayOperationWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AudioPlayOperation), typeof(System.Object));
		L.RegFunction("Subscribe", Subscribe);
		L.RegFunction("Play", Play);
		L.RegFunction("Stop", Stop);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("clip", get_clip, null);
		L.RegVar("audioSource", get_audioSource, null);
		L.RegVar("isFinish", get_isFinish, null);
		L.RegVar("isStop", get_isStop, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Subscribe(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AudioPlayOperation obj = (AudioPlayOperation)ToLua.CheckObject<AudioPlayOperation>(L, 1);
			System.Action<AudioPlayOperation> arg0 = (System.Action<AudioPlayOperation>)ToLua.CheckDelegate<System.Action<AudioPlayOperation>>(L, 2);
			AudioPlayOperation o = obj.Subscribe(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Play(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AudioPlayOperation obj = (AudioPlayOperation)ToLua.CheckObject<AudioPlayOperation>(L, 1);
			AudioPlayOperation o = obj.Play();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Stop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AudioPlayOperation obj = (AudioPlayOperation)ToLua.CheckObject<AudioPlayOperation>(L, 1);
			AudioPlayOperation o = obj.Stop();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_clip(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AudioPlayOperation obj = (AudioPlayOperation)o;
			UnityEngine.AudioClip ret = obj.clip;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clip on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_audioSource(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AudioPlayOperation obj = (AudioPlayOperation)o;
			UnityEngine.AudioSource ret = obj.audioSource;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index audioSource on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isFinish(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AudioPlayOperation obj = (AudioPlayOperation)o;
			bool ret = obj.isFinish;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isFinish on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isStop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AudioPlayOperation obj = (AudioPlayOperation)o;
			bool ret = obj.isStop;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isStop on a nil value");
		}
	}
}

