//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LoopScrollViewWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LoopScrollView), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("SetData", SetData);
		L.RegFunction("GetBaseNodeByIndex", GetBaseNodeByIndex);
		L.RegFunction("MoveToIndex", MoveToIndex);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("item2Item", get_item2Item, set_item2Item);
		L.RegVar("OnItemClick", get_OnItemClick, set_OnItemClick);
		L.RegVar("OnItemPress", get_OnItemPress, set_OnItemPress);
		L.RegVar("OnDataChange", get_OnDataChange, set_OnDataChange);
		L.RegVar("onValueChanged", get_onValueChanged, set_onValueChanged);
		L.RegVar("needItemEvent", get_needItemEvent, set_needItemEvent);
		L.RegVar("needCenter", get_needCenter, set_needCenter);
		L.RegVar("m_cellRect", get_m_cellRect, set_m_cellRect);
		L.RegVar("m_currentIndex", get_m_currentIndex, set_m_currentIndex);
		L.RegVar("allowDrag", get_allowDrag, set_allowDrag);
		L.RegVar("cellScale", get_cellScale, null);
		L.RegVar("directionPos", get_directionPos, null);
		L.RegVar("scale", get_scale, null);
		L.RegVar("pageCount", get_pageCount, null);
		L.RegVar("pageScale", get_pageScale, null);
		L.RegVar("instantiateCount", get_instantiateCount, null);
		L.RegVar("canDrag", get_canDrag, null);
		L.RegVar("instantiateItems", get_instantiateItems, null);
		L.RegVar("instantiateSize", get_instantiateSize, null);
		L.RegVar("maxPrevPos", get_maxPrevPos, null);
		L.RegFunction("OnBaseNodeEvent_bool", LoopScrollView_OnBaseNodeEvent_bool);
		L.RegFunction("OnBaseNodeEvent", LoopScrollView_OnBaseNodeEvent);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				LoopScrollView obj = (LoopScrollView)ToLua.CheckObject<LoopScrollView>(L, 1);
				object arg0 = ToLua.ToVarObject(L, 2);
				obj.SetData(arg0);
				return 0;
			}
			else if (count == 3)
			{
				LoopScrollView obj = (LoopScrollView)ToLua.CheckObject<LoopScrollView>(L, 1);
				object arg0 = ToLua.ToVarObject(L, 2);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
				obj.SetData(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LoopScrollView.SetData");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBaseNodeByIndex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LoopScrollView obj = (LoopScrollView)ToLua.CheckObject<LoopScrollView>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			LoopBaseNode o = obj.GetBaseNodeByIndex(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveToIndex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LoopScrollView obj = (LoopScrollView)ToLua.CheckObject<LoopScrollView>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.MoveToIndex(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_item2Item(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			bool ret = obj.item2Item;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index item2Item on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnItemClick(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			LoopScrollView.OnBaseNodeEvent ret = obj.OnItemClick;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnItemClick on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnItemPress(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			LoopScrollView.OnBaseNodeEvent<bool> ret = obj.OnItemPress;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnItemPress on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnDataChange(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			LoopScrollView.OnDataChangeEvent ret = obj.OnDataChange;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnDataChange on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onValueChanged(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			LoopScrollView.OnContentPosChangeEvent ret = obj.onValueChanged;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onValueChanged on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_needItemEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			bool ret = obj.needItemEvent;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index needItemEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_needCenter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			bool ret = obj.needCenter;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index needCenter on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_cellRect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			UnityEngine.Vector2 ret = obj.m_cellRect;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_cellRect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_currentIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			int ret = obj.m_currentIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_currentIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_allowDrag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			bool ret = obj.allowDrag;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allowDrag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cellScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			float ret = obj.cellScale;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cellScale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_directionPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			float ret = obj.directionPos;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index directionPos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_scale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			float ret = obj.scale;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pageCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			int ret = obj.pageCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pageCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pageScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			int ret = obj.pageScale;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pageScale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_instantiateCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			int ret = obj.instantiateCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index instantiateCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_canDrag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			bool ret = obj.canDrag;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index canDrag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_instantiateItems(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			System.Collections.Generic.List<UnityEngine.RectTransform> ret = obj.instantiateItems;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index instantiateItems on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_instantiateSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			UnityEngine.Vector2 ret = obj.instantiateSize;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index instantiateSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_maxPrevPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			float ret = obj.maxPrevPos;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxPrevPos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_item2Item(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.item2Item = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index item2Item on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnItemClick(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			LoopScrollView.OnBaseNodeEvent arg0 = (LoopScrollView.OnBaseNodeEvent)ToLua.CheckDelegate<LoopScrollView.OnBaseNodeEvent>(L, 2);
			obj.OnItemClick = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnItemClick on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnItemPress(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			LoopScrollView.OnBaseNodeEvent<bool> arg0 = (LoopScrollView.OnBaseNodeEvent<bool>)ToLua.CheckDelegate<LoopScrollView.OnBaseNodeEvent<bool>>(L, 2);
			obj.OnItemPress = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnItemPress on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnDataChange(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			LoopScrollView.OnDataChangeEvent arg0 = (LoopScrollView.OnDataChangeEvent)ToLua.CheckObject<LoopScrollView.OnDataChangeEvent>(L, 2);
			obj.OnDataChange = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnDataChange on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onValueChanged(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			LoopScrollView.OnContentPosChangeEvent arg0 = (LoopScrollView.OnContentPosChangeEvent)ToLua.CheckObject<LoopScrollView.OnContentPosChangeEvent>(L, 2);
			obj.onValueChanged = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onValueChanged on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_needItemEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.needItemEvent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index needItemEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_needCenter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.needCenter = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index needCenter on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_cellRect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.m_cellRect = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_cellRect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_currentIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.m_currentIndex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_currentIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_allowDrag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LoopScrollView obj = (LoopScrollView)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.allowDrag = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allowDrag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoopScrollView_OnBaseNodeEvent_bool(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<LoopScrollView.OnBaseNodeEvent<bool>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<LoopScrollView.OnBaseNodeEvent<bool>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoopScrollView_OnBaseNodeEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<LoopScrollView.OnBaseNodeEvent>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<LoopScrollView.OnBaseNodeEvent>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

