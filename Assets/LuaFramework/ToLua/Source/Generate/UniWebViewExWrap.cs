//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UniWebViewExWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UniWebViewEx), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("SetBackgroundColor", SetBackgroundColor);
		L.RegFunction("SetUserAgent", SetUserAgent);
		L.RegFunction("LoadHTMLString", LoadHTMLString);
		L.RegFunction("EvaluatingJavaScript", EvaluatingJavaScript);
		L.RegFunction("AddJavaScript", AddJavaScript);
		L.RegFunction("CleanCache", CleanCache);
		L.RegFunction("SetCookie", SetCookie);
		L.RegFunction("GetCookie", GetCookie);
		L.RegFunction("AddPermissionRequestTrustSite", AddPermissionRequestTrustSite);
		L.RegFunction("AddUrlScheme", AddUrlScheme);
		L.RegFunction("RemoveUrlScheme", RemoveUrlScheme);
		L.RegFunction("SetHeaderField", SetHeaderField);
		L.RegFunction("SetVerticalScrollBarShow", SetVerticalScrollBarShow);
		L.RegFunction("SetHorizontalScrollBarShow", SetHorizontalScrollBarShow);
		L.RegFunction("SetAllowInlinePlay", SetAllowInlinePlay);
		L.RegFunction("SetAllowAutoPlay", SetAllowAutoPlay);
		L.RegFunction("Stop", Stop);
		L.RegFunction("Reload", Reload);
		L.RegFunction("CanGoBack", CanGoBack);
		L.RegFunction("CanGoForward", CanGoForward);
		L.RegFunction("GoBack", GoBack);
		L.RegFunction("GoForward", GoForward);
		L.RegFunction("Load", Load);
		L.RegFunction("Show", Show);
		L.RegFunction("Hide", Hide);
		L.RegFunction("SetEdgeInsets", SetEdgeInsets);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("uniWebView", get_uniWebView, set_uniWebView);
		L.RegVar("onLoadComplete", get_onLoadComplete, set_onLoadComplete);
		L.RegVar("onReceivedMessage", get_onReceivedMessage, set_onReceivedMessage);
		L.RegVar("onEvalJavaScriptFinished", get_onEvalJavaScriptFinished, set_onEvalJavaScriptFinished);
		L.RegVar("onReceivedKeyCode", get_onReceivedKeyCode, set_onReceivedKeyCode);
		L.RegVar("zoomEnable", get_zoomEnable, set_zoomEnable);
		L.RegVar("userAgent", get_userAgent, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetBackgroundColor(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			obj.SetBackgroundColor(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetUserAgent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			UniWebViewEx.SetUserAgent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadHTMLString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.LoadHTMLString(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EvaluatingJavaScript(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.EvaluatingJavaScript(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddJavaScript(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.AddJavaScript(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CleanCache(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			obj.CleanCache();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCookie(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			UniWebViewEx.SetCookie(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCookie(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			string o = UniWebViewEx.GetCookie(arg0, arg1);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddPermissionRequestTrustSite(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.AddPermissionRequestTrustSite(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUrlScheme(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.AddUrlScheme(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveUrlScheme(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.RemoveUrlScheme(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetHeaderField(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.SetHeaderField(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetVerticalScrollBarShow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetVerticalScrollBarShow(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetHorizontalScrollBarShow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetHorizontalScrollBarShow(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAllowInlinePlay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetAllowInlinePlay(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAllowAutoPlay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetAllowAutoPlay(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Stop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			obj.Stop();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reload(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			obj.Reload();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CanGoBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			bool o = obj.CanGoBack();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CanGoForward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			bool o = obj.CanGoForward();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GoBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			obj.GoBack();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GoForward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			obj.GoForward();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Load(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.Load(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Show(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
				obj.Show();
				return 0;
			}
			else if (count == 5)
			{
				UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				System.Action arg3 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 5);
				obj.Show(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UniWebViewEx.Show");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Hide(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
				obj.Hide();
				return 0;
			}
			else if (count == 5)
			{
				UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				System.Action arg3 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 5);
				obj.Hide(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UniWebViewEx.Hide");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetEdgeInsets(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UniWebViewEx obj = (UniWebViewEx)ToLua.CheckObject<UniWebViewEx>(L, 1);
			UnityEngine.Camera arg0 = (UnityEngine.Camera)ToLua.CheckObject(L, 2, typeof(UnityEngine.Camera));
			UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckObject(L, 3, typeof(UnityEngine.GameObject));
			UnityEngine.GameObject arg2 = (UnityEngine.GameObject)ToLua.CheckObject(L, 4, typeof(UnityEngine.GameObject));
			obj.SetEdgeInsets(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uniWebView(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UniWebViewEx obj = (UniWebViewEx)o;
			UniWebView ret = obj.uniWebView;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uniWebView on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onLoadComplete(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UniWebViewEx obj = (UniWebViewEx)o;
			LuaInterface.LuaFunction ret = obj.onLoadComplete;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onLoadComplete on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onReceivedMessage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UniWebViewEx obj = (UniWebViewEx)o;
			LuaInterface.LuaFunction ret = obj.onReceivedMessage;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onReceivedMessage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onEvalJavaScriptFinished(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UniWebViewEx obj = (UniWebViewEx)o;
			LuaInterface.LuaFunction ret = obj.onEvalJavaScriptFinished;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onEvalJavaScriptFinished on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onReceivedKeyCode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UniWebViewEx obj = (UniWebViewEx)o;
			LuaInterface.LuaFunction ret = obj.onReceivedKeyCode;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onReceivedKeyCode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_zoomEnable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UniWebViewEx obj = (UniWebViewEx)o;
			bool ret = obj.zoomEnable;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index zoomEnable on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_userAgent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UniWebViewEx obj = (UniWebViewEx)o;
			string ret = obj.userAgent;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index userAgent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uniWebView(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UniWebViewEx obj = (UniWebViewEx)o;
			UniWebView arg0 = (UniWebView)ToLua.CheckObject<UniWebView>(L, 2);
			obj.uniWebView = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uniWebView on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onLoadComplete(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UniWebViewEx obj = (UniWebViewEx)o;
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.onLoadComplete = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onLoadComplete on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onReceivedMessage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UniWebViewEx obj = (UniWebViewEx)o;
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.onReceivedMessage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onReceivedMessage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onEvalJavaScriptFinished(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UniWebViewEx obj = (UniWebViewEx)o;
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.onEvalJavaScriptFinished = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onEvalJavaScriptFinished on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onReceivedKeyCode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UniWebViewEx obj = (UniWebViewEx)o;
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.onReceivedKeyCode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onReceivedKeyCode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_zoomEnable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UniWebViewEx obj = (UniWebViewEx)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.zoomEnable = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index zoomEnable on a nil value");
		}
	}
}

