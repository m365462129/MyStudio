//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class littlerbird_UI_QuickGridWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(littlerbird.UI.QuickGrid), typeof(UnityEngine.UI.ScrollRect));
		L.RegFunction("OnDrag", OnDrag);
		L.RegFunction("SetUserEvent", SetUserEvent);
		L.RegFunction("SetUserData", SetUserData);
		L.RegFunction("GetUserEvent", GetUserEvent);
		L.RegFunction("UnSelect", UnSelect);
		L.RegFunction("SelectAll", SelectAll);
		L.RegFunction("SelectIndex", SelectIndex);
		L.RegFunction("SetSelectData", SetSelectData);
		L.RegFunction("SelectData", SelectData);
		L.RegFunction("RefreshItem", RefreshItem);
		L.RegFunction("Refresh", Refresh);
		L.RegFunction("MoveIndex", MoveIndex);
		L.RegFunction("MoveByData", MoveByData);
		L.RegFunction("ShowItemPanel", ShowItemPanel);
		L.RegFunction("HideItemPanel", HideItemPanel);
		L.RegFunction("Clear", Clear);
		L.RegFunction("SetData", SetData);
		L.RegFunction("CalculateRows", CalculateRows);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("OnItemClick", get_OnItemClick, set_OnItemClick);
		L.RegVar("CanSelectItem", get_CanSelectItem, set_CanSelectItem);
		L.RegVar("CanOpenItemPanel", get_CanOpenItemPanel, set_CanOpenItemPanel);
		L.RegVar("OnItemSelectChange", get_OnItemSelectChange, set_OnItemSelectChange);
		L.RegVar("OnItemDataChange", get_OnItemDataChange, set_OnItemDataChange);
		L.RegVar("OnMoveFirstOrLast", get_OnMoveFirstOrLast, set_OnMoveFirstOrLast);
		L.RegVar("movement", get_movement, set_movement);
		L.RegVar("tweenType", get_tweenType, set_tweenType);
		L.RegVar("cellWidth", get_cellWidth, set_cellWidth);
		L.RegVar("cellHeight", get_cellHeight, set_cellHeight);
		L.RegVar("clipWidth", get_clipWidth, set_clipWidth);
		L.RegVar("clipHeight", get_clipHeight, set_clipHeight);
		L.RegVar("pageCells", get_pageCells, set_pageCells);
		L.RegVar("pageRows", get_pageRows, set_pageRows);
		L.RegVar("needItemEvent", get_needItemEvent, set_needItemEvent);
		L.RegVar("selectType", get_selectType, set_selectType);
		L.RegVar("needItemPanel", get_needItemPanel, set_needItemPanel);
		L.RegVar("fixHeightPanel", get_fixHeightPanel, set_fixHeightPanel);
		L.RegVar("needItemPanelMask", get_needItemPanelMask, set_needItemPanelMask);
		L.RegVar("Movement", get_Movement, set_Movement);
		L.RegVar("ClipWidth", get_ClipWidth, set_ClipWidth);
		L.RegVar("ClipHeight", get_ClipHeight, set_ClipHeight);
		L.RegVar("itemMask", get_itemMask, null);
		L.RegVar("itemPanel", get_itemPanel, null);
		L.RegVar("dataList", get_dataList, set_dataList);
		L.RegVar("content", get_content, null);
		L.RegVar("tween", get_tween, null);
		L.RegVar("selectList", get_selectList, null);
		L.RegVar("items", get_items, null);
		L.RegVar("isMoveFirst", get_isMoveFirst, null);
		L.RegVar("isMoveLast", get_isMoveLast, null);
		L.RegVar("currentRow", get_currentRow, null);
		L.RegFunction("QuickGridItemEvenet", littlerbird_UI_QuickGrid_QuickGridItemEvenet);
		L.RegFunction("QuickCallback", littlerbird_UI_QuickGrid_QuickCallback);
		L.RegFunction("ReturnQuickGridItemEvent", littlerbird_UI_QuickGrid_ReturnQuickGridItemEvent);
		L.RegFunction("ReturnQuickGridItemEvent_bool", littlerbird_UI_QuickGrid_ReturnQuickGridItemEvent_bool);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDrag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnDrag(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetUserEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			littlerbird.UI.QuickGrid.QuickGridItemEvenet arg1 = (littlerbird.UI.QuickGrid.QuickGridItemEvenet)ToLua.CheckDelegate<littlerbird.UI.QuickGrid.QuickGridItemEvenet>(L, 3);
			obj.SetUserEvent(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetUserData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			object arg1 = ToLua.ToVarObject(L, 3);
			obj.SetUserData(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUserEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			littlerbird.UI.QuickGrid.QuickGridItemEvenet o = obj.GetUserEvent(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnSelect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			obj.UnSelect();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			obj.SelectAll();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectIndex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SelectIndex(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSelectData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			object[] arg0 = ToLua.ToParamsObject(L, 2, count - 1);
			obj.SetSelectData(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			object[] arg1 = ToLua.ToParamsObject(L, 3, count - 2);
			obj.SelectData(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RefreshItem(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			object arg0 = ToLua.ToVarObject(L, 2);
			obj.RefreshItem(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Refresh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			obj.Refresh();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveIndex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.MoveIndex(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveByData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			object arg0 = ToLua.ToVarObject(L, 2);
			obj.MoveByData(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowItemPanel(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<int>(L, 2))
			{
				littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				obj.ShowItemPanel(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<object>(L, 2))
			{
				littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
				object arg0 = ToLua.ToVarObject(L, 2);
				obj.ShowItemPanel(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: littlerbird.UI.QuickGrid.ShowItemPanel");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HideItemPanel(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
				obj.HideItemPanel();
				return 0;
			}
			else if (count == 2)
			{
				littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.HideItemPanel(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: littlerbird.UI.QuickGrid.HideItemPanel");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			object arg0 = ToLua.ToVarObject(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetData(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalculateRows(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)ToLua.CheckObject<littlerbird.UI.QuickGrid>(L, 1);
			obj.CalculateRows();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnItemClick(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.QuickGridItemEvenet ret = obj.OnItemClick;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnItemClick on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CanSelectItem(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.ReturnQuickGridItemEvent<bool> ret = obj.CanSelectItem;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CanSelectItem on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CanOpenItemPanel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.ReturnQuickGridItemEvent ret = obj.CanOpenItemPanel;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CanOpenItemPanel on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnItemSelectChange(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.QuickGridItemEvenet ret = obj.OnItemSelectChange;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnItemSelectChange on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnItemDataChange(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.QuickGridItemEvenet ret = obj.OnItemDataChange;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnItemDataChange on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnMoveFirstOrLast(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.QuickCallback ret = obj.OnMoveFirstOrLast;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnMoveFirstOrLast on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_movement(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.MoveType ret = obj.movement;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index movement on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tweenType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.GridTweenType ret = obj.tweenType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cellWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int ret = obj.cellWidth;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cellWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cellHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int ret = obj.cellHeight;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cellHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_clipWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int ret = obj.clipWidth;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clipWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_clipHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int ret = obj.clipHeight;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clipHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pageCells(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int ret = obj.pageCells;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pageCells on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pageRows(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int ret = obj.pageRows;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pageRows on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_needItemEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			bool ret = obj.needItemEvent;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index needItemEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_selectType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.SelectType ret = obj.selectType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index selectType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_needItemPanel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			bool ret = obj.needItemPanel;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index needItemPanel on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fixHeightPanel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			bool ret = obj.fixHeightPanel;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fixHeightPanel on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_needItemPanelMask(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			bool ret = obj.needItemPanelMask;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index needItemPanelMask on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Movement(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.MoveType ret = obj.Movement;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Movement on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ClipWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int ret = obj.ClipWidth;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ClipWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ClipHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int ret = obj.ClipHeight;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ClipHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_itemMask(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGridMask ret = obj.itemMask;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index itemMask on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_itemPanel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGridItemPanelBase ret = obj.itemPanel;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index itemPanel on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dataList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			System.Collections.Generic.List<object> ret = obj.dataList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dataList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_content(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGridContent ret = obj.content;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index content on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tween(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGridTweenBase ret = obj.tween;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tween on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_selectList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			System.Collections.Generic.List<object> ret = obj.selectList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index selectList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_items(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			System.Collections.Generic.List<littlerbird.UI.QuickGridItemBase> ret = obj.items;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index items on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isMoveFirst(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			bool ret = obj.isMoveFirst;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isMoveFirst on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isMoveLast(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			bool ret = obj.isMoveLast;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isMoveLast on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_currentRow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int ret = obj.currentRow;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index currentRow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnItemClick(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.QuickGridItemEvenet arg0 = (littlerbird.UI.QuickGrid.QuickGridItemEvenet)ToLua.CheckDelegate<littlerbird.UI.QuickGrid.QuickGridItemEvenet>(L, 2);
			obj.OnItemClick = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnItemClick on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CanSelectItem(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.ReturnQuickGridItemEvent<bool> arg0 = (littlerbird.UI.QuickGrid.ReturnQuickGridItemEvent<bool>)ToLua.CheckDelegate<littlerbird.UI.QuickGrid.ReturnQuickGridItemEvent<bool>>(L, 2);
			obj.CanSelectItem = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CanSelectItem on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CanOpenItemPanel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.ReturnQuickGridItemEvent arg0 = (littlerbird.UI.QuickGrid.ReturnQuickGridItemEvent)ToLua.CheckDelegate<littlerbird.UI.QuickGrid.ReturnQuickGridItemEvent>(L, 2);
			obj.CanOpenItemPanel = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CanOpenItemPanel on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnItemSelectChange(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.QuickGridItemEvenet arg0 = (littlerbird.UI.QuickGrid.QuickGridItemEvenet)ToLua.CheckDelegate<littlerbird.UI.QuickGrid.QuickGridItemEvenet>(L, 2);
			obj.OnItemSelectChange = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnItemSelectChange on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnItemDataChange(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.QuickGridItemEvenet arg0 = (littlerbird.UI.QuickGrid.QuickGridItemEvenet)ToLua.CheckDelegate<littlerbird.UI.QuickGrid.QuickGridItemEvenet>(L, 2);
			obj.OnItemDataChange = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnItemDataChange on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnMoveFirstOrLast(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.QuickCallback arg0 = (littlerbird.UI.QuickGrid.QuickCallback)ToLua.CheckDelegate<littlerbird.UI.QuickGrid.QuickCallback>(L, 2);
			obj.OnMoveFirstOrLast = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnMoveFirstOrLast on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_movement(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.MoveType arg0 = (littlerbird.UI.QuickGrid.MoveType)ToLua.CheckObject(L, 2, typeof(littlerbird.UI.QuickGrid.MoveType));
			obj.movement = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index movement on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tweenType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.GridTweenType arg0 = (littlerbird.UI.QuickGrid.GridTweenType)ToLua.CheckObject(L, 2, typeof(littlerbird.UI.QuickGrid.GridTweenType));
			obj.tweenType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tweenType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cellWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.cellWidth = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cellWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cellHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.cellHeight = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cellHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_clipWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.clipWidth = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clipWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_clipHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.clipHeight = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clipHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pageCells(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.pageCells = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pageCells on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pageRows(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.pageRows = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pageRows on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_needItemEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.needItemEvent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index needItemEvent on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_selectType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.SelectType arg0 = (littlerbird.UI.QuickGrid.SelectType)ToLua.CheckObject(L, 2, typeof(littlerbird.UI.QuickGrid.SelectType));
			obj.selectType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index selectType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_needItemPanel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.needItemPanel = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index needItemPanel on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fixHeightPanel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.fixHeightPanel = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fixHeightPanel on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_needItemPanelMask(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.needItemPanelMask = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index needItemPanelMask on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Movement(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			littlerbird.UI.QuickGrid.MoveType arg0 = (littlerbird.UI.QuickGrid.MoveType)ToLua.CheckObject(L, 2, typeof(littlerbird.UI.QuickGrid.MoveType));
			obj.Movement = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Movement on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ClipWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ClipWidth = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ClipWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ClipHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ClipHeight = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ClipHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dataList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			littlerbird.UI.QuickGrid obj = (littlerbird.UI.QuickGrid)o;
			System.Collections.Generic.List<object> arg0 = (System.Collections.Generic.List<object>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<object>));
			obj.dataList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dataList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int littlerbird_UI_QuickGrid_QuickGridItemEvenet(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<littlerbird.UI.QuickGrid.QuickGridItemEvenet>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<littlerbird.UI.QuickGrid.QuickGridItemEvenet>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int littlerbird_UI_QuickGrid_QuickCallback(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<littlerbird.UI.QuickGrid.QuickCallback>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<littlerbird.UI.QuickGrid.QuickCallback>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int littlerbird_UI_QuickGrid_ReturnQuickGridItemEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<littlerbird.UI.QuickGrid.ReturnQuickGridItemEvent>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<littlerbird.UI.QuickGrid.ReturnQuickGridItemEvent>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int littlerbird_UI_QuickGrid_ReturnQuickGridItemEvent_bool(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<littlerbird.UI.QuickGrid.ReturnQuickGridItemEvent<bool>>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<littlerbird.UI.QuickGrid.ReturnQuickGridItemEvent<bool>>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

