--- 控制层基类
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by houzhen.
--- DateTime: 2018/1/29 17:38
---

local class = require("lib.middleclass")
---@class TableCommonController
---@field module TableMJModule
---@field model TableMJModel
---@field view TableMJView
local TableCommonController = class('tableCommonController')
local ModuleCache = ModuleCache
local UnityEngine = UnityEngine

function TableCommonController:initialize(module)
    self.module = module
    self.model = module.model
    self.view = module.view
    self.curTableData = self.module.curTableData
end

---自动换桌
function TableCommonController:auto_change_table(eventData)
    local gameState = self.module.gameState
    --if(gameState and gameState.IsChangeRoomWhileRestart) then
    if(-1 ~=  UnityEngine.PlayerPrefs.GetInt("ChangeTable", -1)) then
        --[[if(gameState.IsAutoStartAfterChangeRoom) then
            UnityEngine.PlayerPrefs.SetInt("ChangeTable", 2)
        else
            UnityEngine.PlayerPrefs.SetInt("ChangeTable", 1)
        end--]]
        self.module:dispatch_module_event("roomsetting", "Event_RoomSetting_ExitRoom")
    else
        self.model:request_restart_mj(eventData)
    end
end

--- 点击
function TableCommonController:on_click(obj, arg)
    if (obj.name == "ButtonBegin") then
        self.module:dispatch_module_event("tablestrategy", "Event_Show_TableStrategy")
    elseif(obj.name == "Button_BuHua") then
        self.module:buhua_mj()
    elseif(obj.name == "Button_RecOutMj") then
        print("推荐出牌")
    elseif(obj.name == "ButtonEarlyStart") then
        print("申请提前开始")
        local isNotice = ModuleCache.PlayerPrefsManager.GetInt(string.format("%s_EarlyStartNotice",ModuleCache.GameManager.curGameId),2)
        if 2 == isNotice then
            local intentData = {}
            intentData.isNotice = true
            ModuleCache.ModuleManager.show_module("public","table_earlystart",intentData)
        else
            --todo:发送申请提前开始游戏请求
        end
    end
end

--- 点击我的手牌
function TableCommonController:click_my_hand_mj(obj)
    if(self.module:can_out(obj)) then
        if(self.view:hand_mj_is_outing(obj) and not self.view.openFast) then
            if self.module.isDrag then
                self.module:on_end_drag(self.module.isDragMjobj)
                self.module.isDragMjobj = nil
                self.module.isDrag = false
            else
                self.module:out_mj(obj)
            end
        else
            self.view:click_hand_mj_can_out(obj, self.module.isDrag)
        end
    else
        --self.view:click_hand_mj_cant_out(obj)
    end
end

--- 刷新用户状态
function TableCommonController:refresh_user_state(data)

end

--- 显示买马 结算界面
function TableCommonController:show_mai_ma(gameState,time)
    local waitTime = time or 2
    local maiMa = self:get_mai_ma_data(gameState)
    if # maiMa >0 then
        waitTime = #maiMa * 0.2 + 1.3
        self.module:subscibe_time_event(1, false, 0):OnComplete(function(t)
            if(self.module:can_show_result()) then
                ModuleCache.ModuleManager.show_module("majiang", "tablepop", gameState)
            end
        end)
    end
    self.view:play_hu_sound(gameState)
    self.showOneResult = true
    self.module:subscibe_time_event(waitTime, false, 0):OnComplete(function(t)
        if(self.module:can_show_result()) then
            if(ModuleCache.ModuleManager.module_is_active("majiang", "tablepop")) then
                ModuleCache.ModuleManager.hide_module("majiang", "tablepop")
            end
            local onegameresultModule = nil
            if self.view.ConfigData.pnShowResult then
                onegameresultModule = ModuleCache.ModuleManager.show_module("majiang", "onegameresultpuning", gameState)
            else
                onegameresultModule = ModuleCache.ModuleManager.show_module("majiang", "onegameresult", gameState)
            end
            if onegameresultModule then
                onegameresultModule:set_auto_goto_total_result(self.view.ConfigData.autoOpenTotalResultTime)
            end
        end
    end)
end

--- 获取买马数据
function TableCommonController:get_mai_ma_data(gameState)
    return gameState.MaiMa
end

--- 杠牌
function TableCommonController:gang_mj()
    if (#self.module.gameState.KeGang == 1) then
        self:gang_one_mj(self.module.gameState.KeGang[1])
    else
        self.view:show_gang_grid()
    end
end

--- 杠单个牌
function TableCommonController:gang_one_mj(pai)
    self:guo_hu_action(function ()
        self.model:request_gang_mj(pai)
        self.view:hide_wait_action_select_card()
        self.view:hide_ting_hu_grid()
    end)
end

--- 出牌
function TableCommonController:out_mj(pai)
    self.model:request_chu_mj(pai,self.view.isMidTing)
    self.view:mid_ting_handle(false)
end

--- 过牌
function TableCommonController:guo_mj()
    self:guo_hu_action(function ()
        if(self.module.tingPaiState == 2) then
            self.tingPaiState = 0
            self.view:mid_ting_handle(false)
        end
        self.model:request_guo_mj()
        self.view:hide_wait_action_select_card()
    end)
end

--- 补花
function TableCommonController:buhua_mj()
    self:guo_hu_action(function ()
        self.model:request_buhua_mj()
        self.view:hide_wait_action_select_card()
    end)
end

--- 听
function TableCommonController:ting_mj(obj)
    self:guo_hu_action(function ()
        if self.module.tingPaiState == 1 then --- tingPaiState = 1 开局可听    tingPaiState = 2 牌局过程中的可以听
            self.model:request_kai_ju_ting_mj()
            self.view:hide_wait_action_select_card()
        elseif self.module.tingPaiState == 2 then
            self.view:mid_ting_handle(true)
            obj:SetActive(false)
            self.view.waitAction:SetActive(false)
        end
    end)
end

--- 吃
function TableCommonController:chi_mj(pai, chifa)
    self:guo_hu_action(function ()
        self.model:request_chi_mj(pai, chifa)
        self.view:hide_wait_action_select_card()
    end)
end

--- 碰
function TableCommonController:peng_mj(pai)
    self:guo_hu_action(function ()
        if (pai) then
            self:peng_one_mj(pai)
        else
            self:peng_one_mj()
        end
    end)
end

--- 碰单个牌
function TableCommonController:peng_one_mj(pai)
    if(pai) then
        self.model:request_peng_mj(pai)
        self.view:hide_wait_action_select_card()
    else
        self.view:show_peng_grid()
    end
end

--- 胡牌
function TableCommonController:hu_mj(pai)
    self.model:request_hu_mj(pai)
    self.view:hide_wait_action_select_card()
end

--- 过胡提示
function TableCommonController:guo_hu_action(callback,nocallback)
    if(self.view.openGuoHu and self.view:can_hu()) then
        ModuleCache.ModuleManager.show_public_module("alertdialog"):show_common(string.format("您确认放弃胡牌吗？"), function()
            if(callback) then
                callback()
            end
        end, function ()
            if nocallback then
                nocallback()
            end
        end)
    elseif(callback) then
        callback()
    end
end

--- 开始刷新gameState
function TableCommonController:game_state_begin(gameState)

end

function TableCommonController:on_end_drag(obj, arg)

end

return TableCommonController